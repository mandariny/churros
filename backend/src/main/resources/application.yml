
spring:
  profiles:
    group:
      "default": "local,common"
      "devenv": "dev,common"
---
spring:
  config:
    activate:
      on-profile: "local"
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  jpa:
    hibernate:
      #      create : 매번 테이블 새롭게 생성
      #      update : 변경 필요한 경우에만 alter, 테이블 없을 경우 create
      #      create-drop : 매번 테이블 생성 후 작업 종류 직전 생성 테이블 삭제
      #      validate : 테이블에 대한 유효성 검사
      ddl-auto: create
    properties:
      hibernate:
        #        show_sql: true
        format_sql: true
    #      open-in-view: false
    defer-datasource-initialization: false
  datasource:
    driverClassName: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3307/churros?serverTimezone=UTC&characterEncoding=UTF-8&serverTimezone=Asia/Seoul&useSSL=false&useUnicode=true
    username: root
    password: ${MARIADB_PASSWORD}
  data:
    mongodb:
      uri: mongodb://localhost:27017/newsdb
elasticsearch:
  host: localhost
  port: 9200
  username: ${ELASTICSEARCH_ID}
  password: ${ELASTICSEARCH_PASSWORD}

crs:
  uri: http://churros-crs:8080
---
spring:
  config:
    activate:
      on-profile: "dev"
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  jpa:
    hibernate:
      #      create : 매번 테이블 새롭게 생성
      #      update : 변경 필요한 경우에만 alter, 테이블 없을 경우 create
      #      create-drop : 매번 테이블 생성 후 작업 종류 직전 생성 테이블 삭제
      #      validate : 테이블에 대한 유효성 검사
      ddl-auto: update
    properties:
      hibernate:
        #        show_sql: true
        format_sql: true
    #      open-in-view: false
    defer-datasource-initialization: false
  datasource:
    driverClassName: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://churros-mariadb/churros?serverTimezone=UTC&characterEncoding=UTF-8&serverTimezone=Asia/Seoul&useSSL=false&useUnicode=true
    username: root
    password: ${MARIADB_PASSWORD}
  data:
    mongodb:
      uri: ${MONGODB_URI}
logging:
  level:
    org:
      springframework:
        security=DEBUG:
crs:
  uri: http://churros-crs:8000
elasticsearch:
  host: churros-elasticsearch
  port: 9200
  username: ${ELASTICSEARCH_ID}
  password: ${ELASTICSEARCH_PASSWORD}
---
springfox:
  documentation:
    swagger:
      use-model-v3: false
spring:
  config:
    activate:
      on-profile: "common"
  jackson:
    time-zone: Asia/Seoul
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # 네이버 관련 설정
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: vr_Oowemll
            redirect-uri: http://localhost:9999/oauth2/callback/naver
            client-authentication-method: post
            authorization-grant-type: authorization_code
            scope: nickname,email,profile_image
            client-name: Naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
server:
  port: 9999
  tomcat:
    uri-encoding: utf-8

  error:
    whitelabel:
      enabled=false:

springdoc:
  swagger-ui:
    path=/swagger-ui:
      html:

# jwt 토큰
app:
  auth:
    tokenSecret: ${TOKEN_KEY}
    accessTokenExpirationMsec: 20000000
    refreshTokenExpirationMsec: 600000000
  cors:
    allowedOrigins: http://localhost:3000, http://localhost:9999, https://www.churros.site, https://churros.site
  oauth2:
    authorizedRedirectUris: http://localhost:3000/oauth2/redirect

kakao:
  client-id: ${KAKAO_CLIENT_ID}
  client-secret: ${KAKAO_CLIENT_SECRET_KEY}
